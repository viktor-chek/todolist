version: "3.9"

services:
  frontend:
    image: sermalenk/skypro-front:lesson-35
    restart: on-failure
    depends_on:
      - api
    ports:
      - 80:80
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  api:
    image: viktorchek/diplom:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_started
    env_file:
      - .env
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  migrations:
    image: viktorchek/diplom:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command: python manage.py migrate
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: on-failure
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5